{
    "openapi": "3.0.0",
    "info": {
        "title": "API documentation",
        "version": "0.1.1"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Code sent to your phone."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 123456
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "description": "Phone number of the user",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The phone field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-code": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's verification code",
                "operationId": "21547f302608ff14a11784724a0e6ee7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "description": "Phone number of the user",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "verification_code": {
                                        "description": "Verification code sent to the user's phone",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Code verified."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "sdf-sd-rt-we-gf-dfafasdfew-wer-qwr-345"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid verification code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The phone field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users-plan": {
            "get": {
                "tags": [
                    "PlansUser"
                ],
                "summary": "Get a list of user plans",
                "operationId": "73437c678f46f6870fe699cc3440e9f4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlansUser"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "PlansUser"
                ],
                "summary": "Create a new user plan",
                "operationId": "878b1480679cdb199fef5c93e2f3e645",
                "requestBody": {
                    "description": "Data to create a new user plan",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "plan_id",
                                    "user_id",
                                    "date_begin",
                                    "date_end"
                                ],
                                "properties": {
                                    "plan_id": {
                                        "description": "ID плана",
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "description": "ID пользователя",
                                        "type": "integer"
                                    },
                                    "date_begin": {
                                        "description": "Дата начала",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "date_end": {
                                        "description": "Дата окончания",
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlansUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data provided"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users-plan/{id}": {
            "get": {
                "tags": [
                    "PlansUser"
                ],
                "summary": "Get a specific user plan",
                "operationId": "51e35749e3d7e6d82e3c623e030f2bc3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID плана пользователя",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the user plan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlansUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "PlansUser"
                ],
                "summary": "Update a user plan",
                "operationId": "fd8a71adce78dc24df7dfd040417bff3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID плана пользователя",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for updating the user plan",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plan_id": {
                                        "description": "ID плана",
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "description": "ID пользователя",
                                        "type": "integer"
                                    },
                                    "date_begin": {
                                        "description": "Дата начала",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "date_end": {
                                        "description": "Дата окончания",
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the user plan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlansUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PlansUser"
                ],
                "summary": "Delete a user plan",
                "operationId": "573901c60e293a43bf2bc83fff67b330",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID плана пользователя для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plan deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Plan deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Retrieve all roles",
                "description": "Returns a collection of roles",
                "operationId": "getRoles",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "description": "Creates a new role and returns the created role",
                "operationId": "storeRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the role",
                                        "type": "string",
                                        "example": "Admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Retrieve a role by ID",
                "description": "Returns a single role resource by its ID",
                "operationId": "getRoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update a role by ID",
                "description": "Updates the name of an existing role and returns the updated resource",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The new name of the role",
                                        "type": "string",
                                        "example": "Manager"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/role-users": {
            "get": {
                "tags": [
                    "Role Users"
                ],
                "summary": "Retrieve all role-user assignments",
                "description": "Returns a collection of role-user assignments",
                "operationId": "getRoleUsers",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleUsersResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Role Users"
                ],
                "summary": "Assign a role to a user",
                "description": "Creates a new role-user assignment if it doesn't already exist",
                "operationId": "assignRoleToUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "The ID of the user to whom the role is assigned",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "role_id": {
                                        "description": "The ID of the role to assign to the user",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleUsersResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User already has this role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already has this role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to assign role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to assign role"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "user_id": [
                                                    "The user_id field is required."
                                                ],
                                                "role_id": [
                                                    "The role_id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/role-users/{id}": {
            "get": {
                "tags": [
                    "Role Users"
                ],
                "summary": "Retrieve a specific role-user assignment",
                "description": "Returns a single role-user assignment by its ID",
                "operationId": "getRoleUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role-user assignment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role-User assignment found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleUsersResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role-User assignment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Role Users"
                ],
                "summary": "Update an existing role-user assignment",
                "description": "Updates a role-user assignment by its ID",
                "operationId": "updateRoleUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role-user assignment to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "The ID of the user to update",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "role_id": {
                                        "description": "The ID of the role to assign to the user",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role-User assignment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleUsersResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role-User assignment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "user_id": [
                                                    "The user_id field is required."
                                                ],
                                                "role_id": [
                                                    "The role_id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Role Users"
                ],
                "summary": "Delete a role-user assignment",
                "description": "Deletes a role-user assignment by its ID",
                "operationId": "deleteRoleUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role-user assignment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role-User assignment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role-User assignment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Retrieve a list of all stores",
                "operationId": "789854b8f9730d47f1ba52ca5e610238",
                "responses": {
                    "200": {
                        "description": "List of stores",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create a new store",
                "operationId": "5562ee6fb25788924172167093719fe9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Store"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stores/{id}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Retrieve a store by ID",
                "operationId": "cd24cde4c43f6c4aeb2ed9725fca9624",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update a store by ID",
                "operationId": "88ff3f89a8f75ba1778135a219a7df23",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Store Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete a store by ID",
                "operationId": "93650469eaff668e6c504e674efdc02a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            }
        },
        "/api/store-users": {
            "get": {
                "tags": [
                    "Store Users"
                ],
                "summary": "Get a list of all store users",
                "operationId": "d0473dafaea0770ddfbbdf5ed13a4d7f",
                "responses": {
                    "200": {
                        "description": "A list of store users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreUsersResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Store Users"
                ],
                "summary": "Create a new store user",
                "operationId": "6a68a0f17bb491d84e9602780f8e5614",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "api_key",
                                    "store_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the store user",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "api_key": {
                                        "description": "API key for the store user",
                                        "type": "string",
                                        "example": "abc123xyz"
                                    },
                                    "store_id": {
                                        "description": "ID of the associated store",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store user created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreUsersResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/store-users/{id}": {
            "get": {
                "tags": [
                    "Store Users"
                ],
                "summary": "Retrieve a store user by ID",
                "operationId": "de6583b3f381cb75c76f962e3cf0f616",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store user data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreUsersResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Store Users"
                ],
                "summary": "Update an existing store user",
                "operationId": "1a3101cefbf8012bcfbc8e2b09aa94f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "api_key",
                                    "store_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Store User"
                                    },
                                    "api_key": {
                                        "type": "string",
                                        "example": "newApiKey123"
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store user updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreUsersResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Store Users"
                ],
                "summary": "Delete a store user by ID",
                "operationId": "7c1a152420b1b93933a66a9f3a3aa289",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store user deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subscribe-plans": {
            "get": {
                "tags": [
                    "Subscribe Plans"
                ],
                "summary": "Get list of subscription plans",
                "operationId": "9d28f9bde22e6b168a8fcb23fa243a39",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscribePlansResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subscribe Plans"
                ],
                "summary": "Create a new subscription plan",
                "operationId": "71aa781ad53c0c9eaaf4adb75766238e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Basic Plan"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 9.99
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is a basic subscription plan."
                                    },
                                    "month": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subscription plan created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscribePlansResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/subscribe-plans/{id}": {
            "get": {
                "tags": [
                    "Subscribe Plans"
                ],
                "summary": "Get details of a specific subscription plan",
                "operationId": "70b70eacc846efa6231ff6d9b568c357",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subscription plan to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscribePlansResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Plan not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Subscribe Plans"
                ],
                "summary": "Update an existing subscription plan",
                "operationId": "5864900316f37e54c42b6789919e1d04",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subscription plan to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Plan"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 14.99
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for the plan."
                                    },
                                    "month": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription plan updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscribePlansResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Plan not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a list of all users",
                "description": "Returns a list of all registered users",
                "operationId": "getUsersList",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PlansUser": {
                "properties": {
                    "user_id": {
                        "description": "ID пользователя",
                        "type": "integer"
                    },
                    "plan_id": {
                        "description": "ID плана",
                        "type": "integer"
                    },
                    "date_begin": {
                        "description": "Дата начала",
                        "type": "string",
                        "format": "date"
                    },
                    "date_end": {
                        "description": "Дата окончания",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "Role Resource",
                "description": "Role representation",
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Role name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation date in d-m-Y format",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "RoleUsersResource": {
                "title": "Role-User Assignment Resource",
                "description": "Role-User assignment details",
                "properties": {
                    "id": {
                        "description": "The ID of the role-user assignment",
                        "type": "integer",
                        "example": 1
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleResource"
                    },
                    "created_at": {
                        "description": "The creation date of the role-user assignment",
                        "type": "string",
                        "format": "date",
                        "example": "16-12-2024"
                    }
                },
                "type": "object"
            },
            "StoreResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Example Store"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StoreUsersResource": {
                "title": "Store Users Resource",
                "description": "Resource representation of a store user",
                "properties": {
                    "id": {
                        "description": "ID of the store user",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the store user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "api_key": {
                        "description": "API key for the store user",
                        "type": "string",
                        "example": "abc123xyz"
                    },
                    "store_type": {
                        "$ref": "#/components/schemas/StoreResource"
                    },
                    "created_at": {
                        "description": "Creation date of the store user",
                        "type": "string",
                        "format": "date",
                        "example": "17-12-2024"
                    }
                },
                "type": "object"
            },
            "SubscribePlansResource": {
                "title": "Subscribe Plan Resource",
                "description": "Representation of a single subscription plan",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Updated Plan"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 14.99
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated description for the plan."
                    },
                    "month": {
                        "type": "integer",
                        "example": 3
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-13T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-13T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User",
                "description": "Модель данных пользователя",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+123456789"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/SubscribePlansResource"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-13T12:34:56Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "PlansUser",
            "description": "PlansUser"
        },
        {
            "name": "Roles",
            "description": "Roles"
        },
        {
            "name": "Role Users",
            "description": "Role Users"
        },
        {
            "name": "Stores",
            "description": "Stores"
        },
        {
            "name": "Store Users",
            "description": "Store Users"
        },
        {
            "name": "Subscribe Plans",
            "description": "Subscribe Plans"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}